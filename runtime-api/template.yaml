apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: Runtime-API
  title: "Runtime APIs Template"
  tags: [foundation-platform]
  description: |
    Template para adição de APIs no projeto runtime AWS e Azure
spec:
  owner: stone-payments/foundation-platform-cloud
  type: service

  parameters:
    - title: Dados da Aplicação
      required: [name,description,context,cost,team,slack,documentation,github]
      properties:
        name:
          title: Nome
          type: string
          description: 'Nome da Aplicação. Ex: my-awesome-app'
          maxLength: 30
          pattern: '^([a-z-]+)$'
          ui:field: EntityNamePicker
          ui:autofocus: true
          ui:help: 'Nota: Máximo 30 caracteres, somente letras minusculas separadas por traços'

        description:
          title: Descrição
          type: string
          description: Descrição da Aplicação
          maxLength: 255
          pattern: '(?<!\.\s)[A-Za-z]+'
          ui:help: 'Nota: Máximo 255 caracteres'

        context:
          title: Contexto
          type: string
          description: Contexto a qual sua aplicação pertence
          enum:
            - operation
            - costumer
            - segment-teams
            - interaction
            - lifecycle
            - product
            - financial-services
            - local-fs-schemes
            - defense-and-audit
            - engineering

        cost:
          title: Centro de Custo
          type: string
          description: Centro de Custo do seu Time
          maxLength: 9
          pattern: '^([0-9]{9})$'
          ui:help: 'Nota: Formado com 9 caracteres, somente números! Link de referência: https://docs.google.com/spreadsheets/d/1zZMKxKEj7grVNaFnwYF4FHNFSRekFK9JZ29Z0WN8bWE/edit#gid=776305736'

        team:
          title: Time Responsável
          description: Time responsável pela aplicação
          type: string
          maxLength: 63
          pattern: '^([a-z_-]+)$'
          ui:help: 'Nota: Máximo 63 caracteres, somente letras minusculas'

        slack:
          title: Grupo do Slack
          description: Grupo do slack do time responsável da aplicação
          type: string
          maxLength: 45
          pattern: '^(@[a-z_-]+)$'
          default: '@'
          ui:help: 'Nota: Máximo 45 caracteres, iniciar com arroba e depois somente letras minusculas, podendo incluir underscore ou sinal de menos'

        documentation:
          title: Documentação
          type: string
          description: Link onde se encontra a documentação do projeto
          default: 'https://'
          pattern: '^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{3,7})([\/\w \.-]*)*\/?$'
          ui:help: 'EX: https://stonepayments.atlassian.net/'

        github:
          title: Grupo do Github
          description: Grupo de usuários do github responsável pelo o repositório a ser criado
          type: string
          ui:field: OwnerPicker
          ui:options:
            allowedkinds:
              - Group
          ui:help: 'Esse grupo fará parte do arquivo de CODEOWNERS do repositório'

# --------------------------------------------------------------------------------------------------------

    - title: Modelos e Estruturas da Aplicação
      required: [typeApp, languageApp, versionApp]
      properties:
        typeApp:
          title: Modelo da aplicação?
          type: string
          enum: [front-end,back-end]
          ui:widget: radio
      dependencies:
        typeApp:
          oneOf:
            - properties:
                typeApp:
                  enum: [front-end]
                languageApp:
                  title: Linguagem
                  type: string
                  enum: [javascript,angular,react,typescript]
                  enumNames: [JavaScript,Angular,React,TypeScript]
              dependencies:
                languageApp:
                  oneOf:
                    - properties:
                        languageApp:
                          enum: [javascript]
                        versionApp:
                          title: Versão do Nginx
                          description: Imagem base para construir a sua aplicação
                          type: string
                          enum: ['1.25.2','1.24.0','stable','alpine']
                          ui:help: 'TAG da imagem do Dockerfile'
                    - properties:
                        languageApp:
                          enum: [angular,react,typescript]
                        versionApp:
                          title: Versão do NodeJs
                          description: Imagem base para construir a sua aplicação
                          type: string
                          enum: ['16.20.2','18.17.1','20.5.1']
                          ui:help: 'TAG da imagem do Dockerfile'

            - properties:
                typeApp:
                  enum: [back-end]
                languageApp:
                  title: Linguagem
                  type: string
                  enum: [node,golang,python,iis,csharp]
                  enumNames: [Nodejs,Go,Python,ASP.NET,.NET]
              dependencies:
                languageApp:
                  oneOf:
                    - properties:
                        languageApp:
                          enum: [node]
                        versionApp:
                          title: Versão
                          type: string
                          enum: ['16.20.2','18.17.1','20.5.1']
                          ui:help: 'TAG da imagem do Dockerfile'
                    - properties:
                        languageApp:
                          enum: [golang]
                        versionApp:
                          title: Versão
                          type: string
                          enum: ['1.18','1.19','1.20','1.21']
                          ui:help: 'TAG da imagem do Dockerfile'
                    - properties:
                        languageApp:
                          enum: [python]
                        versionApp:
                          title: Versão
                          type: string
                          enum: ['3.8','3.9','3.10','3.11']
                          ui:help: 'TAG da imagem do Dockerfile'
                    - properties:
                        languageApp:
                          enum: [iis,csharp]
                        versionApp:
                          title: Versão
                          description: Imagem utilizada mcr.microsoft.com/dotnet/dotnet ou mcr.microsoft.com/dotnet/runtime
                          type: string
                          enum: ['6.0','7.0']
                          ui:help: 'TAG da imagem do Dockerfile'

# --------------------------------------------------------------------------------------------------------
#
    - title: Configuração Básica da Aplicação
      required: [provider,accessApp]
      properties:
        provider:
          title: Local onde a aplicação será implementada?
          type: string
          description: Provedor de Cloud
          enum: [aws,azure]
          enumNames: [AWS,Azure]
          ui:widget: radio

      dependencies:
        provider:
          oneOf:
            - properties:
                provider:
                  enum: [aws]
                accessApp:
                  title: Como a aplicação será acessada?
                  type: string
                  description: Configuração do acesso a sua aplicação Privado ou Público
                  enum: [internamente]
                  enumNames: [Internamente]
                  default: internamente
                  ui:widget: radio
                  ui:autofocus: true
                envs:
                  title: Ambiente de implementação
                  required: [env]
                  properties:
                    env:
                      title: Selecione os ambientes?
                      type: array
                      items:
                        type: string
                        enum: [stg,homolog,sdx,prd]
                        enumNames: [Staging,Homolog,Sandbox,Production]
                      uniqueItems: true
                      ui:widget: checkboxes
                      ui:help: 'Local onde a aplicação será criada no cluster K8S'
                resources:
                  title: Recursos da aplicação
                  description: Configuração dos recursos para a aplicação
                  required: [cpuApp,memoryApp,portApp]
                  properties:
                    cpuApp:
                      title: CPU
                      type: string
                      description: Quantidade de recurso de CPU necessário para a sua aplicação
                      maxLength: 4
                      default: 100m
                      pattern: '^([0-9]{1,3})([m]{1})$|^([0-9][.][0-9])$'
                      ui:help: 'EX: 0.5, 1.0, 100m, 999m - até no máximo 4 caracteres'
                    memoryApp:
                      title: Memory
                      type: string
                      description: Quantidade de recurso de Memória necessário para a sua aplicação
                      maxLength: 7
                      default: 128Mi
                      pattern: '^([0-9]{1,3}[i+GM]{2})$'
                      ui:help: 'EX: 64Mi e 1Gi - até no máximo 7 caracteres'
                    portApp:
                      title: Porta
                      type: number
                      description: Porta usada dentro da aplicacao para a sua exposição
                      maxLength: 4
                      default: 8080
                      pattern: '^([3-9][0-9]{3})$'
                      ui:help: 'Somente serão aceitas portas entre 3000 a 9999 para a sua aplicação'

            - properties:
                provider:
                  enum: [azure]
                accessApp:
                  title: Como a aplicação será acessada?
                  type: string
                  description: Configuração do acesso a sua aplicação Privado ou Público
                  enum: [internamente,externamente]
                  enumNames: [Internamente,Externamente]
                  default: internamente
                  ui:widget: radio
                  ui:autofocus: true
                envs:
                  title: Ambiente de implementação
                  required: [env]
                  properties:
                    env:
                      title: Selecione os ambientes?
                      type: array
                      items:
                        type: string
                        enum: [stg,dr,prd]
                        enumNames: [Staging,Disaster-Recovery,Production]
                      uniqueItems: true
                      ui:widget: checkboxes
                      ui:help: 'Local onde a aplicação será criada no cluster K8S'
                resources:
                  title: Recursos da aplicação
                  description: Configuração dos recursos para a aplicação
                  required: [cpuApp,memoryApp,portApp]
                  properties:
                    cpuApp:
                      title: CPU
                      type: string
                      description: Quantidade de recurso de CPU necessário para a sua aplicação
                      maxLength: 4
                      default: 100m
                      pattern: '^([0-9]{1,3})([m]{1})$|^([0-9][.][0-9])$'
                      ui:help: 'EX: 0.5, 1.0, 100m, 999m - até no máximo 4 caracteres'
                    memoryApp:
                      title: Memory
                      type: string
                      description: Quantidade de recurso de Memória necessário para a sua aplicação
                      maxLength: 7
                      default: 128Mi
                      pattern: '^([0-9]{1,3}[i+GM]{2})$'
                      ui:help: 'EX: 64Mi e 1Gi - até no máximo 7 caracteres'
                    portApp:
                      title: Porta
                      type: number
                      description: Porta usada dentro da aplicacao para a sua exposição
                      maxLength: 4
                      default: 8080
                      pattern: '^([3-9][0-9]{3})$'
                      ui:help: 'Somente serão aceitas portas entre 3000 a 9999 para a sua aplicação'

# --------------------------------------------------------------------------------------------------------

    - title: Configuração Avançada da Aplicação
      required: [advanced]
      properties:
        advanced:
          title: Sua aplicação possuirá configurações avançadas?
          type: string
          enum: [Sim,Não]
          ui:widget: radio
      dependencies:
        advanced:
          oneOf:
            - properties:
                advanced:
                  enum: [Sim]
                optionVariables:
                  title: Variáveis na Aplicação?
                  type: string
                  description: Configuração de variáveis dentro da sua aplicação
                  enum: [Sim,Não]
                  default: Não
                  ui:widget: radio
                optionSecrets:
                  title: Secrets na Aplicação?
                  type: string
                  description: Configuração das secrets dentro da sua aplicação
                  enum: [Sim,Não]
                  default: Não
                  ui:widget: radio
                optionSidecars:
                  title: Sidecars na Aplicação?
                  type: string
                  description: Configuração de sidecars junto com a sua aplicação
                  enum: [Sim,Não]
                  default: Não
                  ui:widget: radio
                optionNps:
                  title: Network Policy na Aplicação?
                  type: string
                  description: Configuração de network policy para acesso externo da aplicação
                  enum: [Sim,Não]
                  default: Não
                  ui:widget: radio
                optionHealth:
                  title: Customizar o Healthcheck da Aplicação?
                  type: string
                  description: Configuração do livenessProbe e readinessProbe para a aplicação
                  enum: [Sim,Não]
                  default: Não
                  ui:widget: radio
                optionCanary:
                  title: Customizar o Canary Deployment?
                  type: string
                  description: Configuração do canary deployment via argo rollout para a aplicação
                  enum: [Sim,Não]
                  default: Não
                  ui:widget: radio
              dependencies:

# --------------------------------------------------------------------------------------------------------

                optionVariables:
                  oneOf:
                    - properties:
                        optionVariables:
                          enum: [Sim]
                        variables_multiline:
                          title: Configurações das variáveis
                          type: array
                          ui:options:
                            orderable: false
                          description: Adicione as variáveis separadamente, caso necessite mais de uma
                          items:
                            type: object
                            required: [nameVariables,valueVariables]
                            properties:
                              nameVariables:
                                title: Variável
                                type: string
                                description: Nome da Variável
                                maxLength: 25
                                pattern: '^([A-Z]+)$'
                                ui:autofocus: true
                                ui:field: EntityNamePicker
                                ui:help: 'Nota: Máximo 25 caracteres, somente letras maiúsculas'
                              valueVariables:
                                title: Valor
                                type: string
                                description: Valor da Variável
                                maxLength: 50
                                pattern: '^([a-zA-Z0-9.\-\/])+$'
                                ui:help: 'Nota: Máximo 50 caracteres'

                    - properties:
                        optionVariables:
                          enum: [Não]

# --------------------------------------------------------------------------------------------------------

                optionSecrets:
                  oneOf:
                    - properties:
                        optionSecrets:
                          enum: [Sim]
                        secrets_multiline:
                          title: Configurações das secrets
                          type: array
                          ui:options:
                            orderable: false
                          description: Adicione as secrets separadamente, caso necessite mais de uma
                          items:
                            type: object
                            required: [nameSecrets]
                            properties:
                              nameSecrets:
                                title: Secret
                                type: string
                                description: Nome da Secret
                                maxLength: 25
                                pattern: '^([A-Z]+)$'
                                ui:field: EntityNamePicker
                                ui:help: 'Nota: Máximo 25 caracteres, somente letras maiúsculas'

                    - properties:
                        optionSecrets:
                          enum: [Não]

# --------------------------------------------------------------------------------------------------------

                optionSidecars:
                  oneOf:
                    - properties:
                        optionSidecars:
                          enum: [Sim]
                        sidecars_multiline:
                          title:  Configurações do sidecars
                          type: array
                          description: Adicione as configurações separadamente, caso necessite mais de uma
                          items:
                            type: object
                            required: [nameSidecars,imageSidecars,portSidecars,commandSidecars,argsSidecars,cpuSidecars,memorySidecars]
                            properties:
                              nameSidecars:
                                title: Nome
                                type: string
                                description: Nome do Sidecars para a Aplicação
                                maxLength: 20
                                pattern: '^([a-z]+)$'
                                ui:field: EntityNamePicker
                                ui:autofocus: true
                                ui:help: 'Nota: Máximo 20 caracteres, somente letras minusculas'
                              imageSidecars:
                                title: Imagem a ser usada para o Sidecars
                                type: string
                                pattern: '^[a-z0-9/]+(?:[._-]{1}[a-z0-9/]+)+(?:[:]{1}[a-z0-9.-]+)*$'
                                description: Nome da imagem junto com a sua TAG (Sidecars)
                                ui:help: 'EX: docker.io/imagem:tag'
                              portSidecars:
                                title: Porta
                                type: number
                                description: Porta usada dentro do sidecars para aplicacao utilizar
                                maxLength: 5
                                default: 80
                                pattern: '^([0-9]{1,5})$'
                                ui:help: 'Nota: Permitido somente numeros, até 5 caracteres'
                              commandSidecars:
                                title: Comando
                                type: string
                                description: Comando usado dentro do sidecars
                                ui:help: Coloque o comando utilizando dentro de chaves e aspas duplas
                                ui:placeholder: |
                                  ["/bin/sh"]
                              argsSidecars:
                                title: Argumentos
                                type: string
                                description: Argumentos usados dentro do sidecars
                                ui:widget: textarea
                                ui:options:
                                  rows: 5
                                ui:help: 'Coloque o argumento, caso deseje colocar outros tecle <Enter>, assim sucessivamente, limitado a 5 argumentos'
                                ui:placeholder: |
                                  echo $(date)
                                  echo hello world
                              cpuSidecars:
                                title: Recurso de CPU
                                type: string
                                description: Quantidade de recurso de CPU necessário para a sua sidecars
                                maxLength: 4
                                default: 100m
                                pattern: '^([0-9]{1,3})([m]{1})$|^([0-9][.][0-9])$'
                                ui:help: 'EX: 0.5, 1.0, 100m, 999m - até no máximo 4 caracteres'
                              memorySidecars:
                                title: Recurso de Memory
                                type: string
                                description: Quantidade de recurso de Memória necessário para a sua sidecars
                                maxLength: 7
                                default: 128Mi
                                pattern: '^([0-9]{1,3}[i+GM]{2})$'
                                ui:help: 'EX: 64Mi e 1Gi - até no máximo 7 caracteres'
                          uniqueItems: true

                    - properties:
                        optionSidecars:
                          enum: [Não]

# --------------------------------------------------------------------------------------------------------

                optionNps:
                  oneOf:
                    - properties:
                        optionNps:
                          enum: [Sim]
                        nps_multiline:
                          title:  Configurações de network policy
                          type: array
                          description: Adicione as configurações separadamente, caso necessite mais de uma
                          items:
                            type: object
                            required: [nameNps,portNps,cidrNps]
                            properties:
                              nameNps:
                                title: Nome do Destino
                                type: string
                                description: Nome da aplicação que será acessada pela regra
                                maxLength: 20
                                pattern: '^([a-z-]+)$'
                                ui:field: EntityNamePicker
                                ui:autofocus: true
                                ui:help: 'Nota: Máximo 20 caracteres - EX: banco-bo, somente letras minusculas'
                              portNps:
                                title: Porta(s)
                                type: string
                                description: Portas a serem liberadas no destino onde a aplicacão conectará
                                ui:help: 'Coloque a porta e tecle <Enter>, assim sucessivamente, limitado a 5 portas'
                                ui:widget: textarea
                                pattern: '([0-9]{1,5})\w+'
                                ui:options:
                                  rows: 5
                                ui:placeholder: |
                                  80
                                  443
                                  5000
                              cidrNps:
                                title: Endereço(s)
                                type: string
                                description: Endereço IPV4 do destino onde a aplicacão conectará
                                ui:widget: textarea
                                ui:help: 'Coloque o endereço com a máscara e tecle <Enter>, assim sucessivamente, limitado a 5 endereços'
                                pattern: '([0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\/[0-9]{1,2})\w+'
                                ui:options:
                                  rows: 5
                                ui:placeholder: |
                                  10.0.0.10/32
                                  172.16.0.10/32
                                  192.168.0.10/32
                          uniqueItems: true

                    - properties:
                        optionNps:
                          enum: [Não]

# --------------------------------------------------------------------------------------------------------

                optionHealth:
                  oneOf:
                    - properties:
                        optionHealth:
                          enum: [Sim]
                        health_liveness:
                          title:  Configurações de livenessProbe
                          type: array
                          description: Configuração do recurso
                          ui:help: 'https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/'
                          items:
                            type: object
                            required: [livenessPath,livenessFt,livenessPs,livenessDs,livenessTs]
                            properties:
                              livenessPath:
                                title: Path
                                type: string
                                maxLength: 20
                                pattern: '^([a-z/]+)$'
                                default: /
                                ui:autofocus: true
                                ui:help: 'Nota: Máximo 20 caracteres'
                              livenessFt:
                                title: Failure Threshould
                                type: number
                                maxLength: 2
                                default: 3
                                ui:help: 'Nota: Máximo 2 caracteres'
                              livenessPs:
                                title: Period Seconds
                                type: number
                                maxLength: 2
                                default: 20
                                ui:help: 'Nota: Máximo 2 caracteres'
                              livenessDs:
                                title: Initial Delay Seconds
                                type: number
                                maxLength: 2
                                default: 15
                                ui:help: 'Nota: Máximo 2 caracteres'
                              livenessTs:
                                title: Timeout Seconds
                                type: number
                                maxLength: 2
                                default: 10
                                ui:help: 'Nota: Máximo 2 caracteres'
                          uniqueItems: true
                        health_readiness:
                          title:  Configurações de readinessProbe
                          type: array
                          description: Configuração do recurso
                          ui:help: 'https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/'
                          items:
                            type: object
                            required: [readinessPath,readinessFt,readinessPs,readinessDs,readinessTs]
                            properties:
                              readinessPath:
                                title: Path
                                type: string
                                maxLength: 20
                                pattern: '^([a-z/]+)$'
                                default: /
                                ui:autofocus: true
                                ui:help: 'Nota: Máximo 20 caracteres'
                              readinessFt:
                                title: Failure Threshould
                                type: number
                                maxLength: 2
                                default: 3
                                ui:help: 'Nota: Máximo 2 caracteres'
                              readinessPs:
                                title: Period Seconds
                                type: number
                                maxLength: 2
                                default: 20
                                ui:help: 'Nota: Máximo 2 caracteres'
                              readinessDs:
                                title: Initial Delay Seconds
                                type: number
                                maxLength: 2
                                default: 15
                                ui:help: 'Nota: Máximo 2 caracteres'
                              readinessTs:
                                title: Timeout Seconds
                                type: number
                                maxLength: 2
                                default: 10
                                ui:help: 'Nota: Máximo 2 caracteres'
                          uniqueItems: true
                    - properties:
                        optionHealth:
                          enum: [Não]

# --------------------------------------------------------------------------------------------------------

                optionCanary:
                  oneOf:
                    - properties:
                        optionCanary:
                          enum: [Sim]
                        deployCanary:
                          title:  Configurações do Canary Deployment
                          type: array
                          description: Configuração dos tempos e porcetangem de rollout para os novos pods da aplicação
                          items:
                            type: object
                            required: [setWeightOne,pauseOne,setWeightTwo,pauseTwo,setWeightThree,pauseThree]
                            properties:
                              setWeightOne:
                                title: Porcentagem % - Fase 1
                                type: number
                                maxLength: 2
                                default: 20
                                ui:autofocus: true
                                ui:help: 'Porcentagem de pods da nova versão da aplicação que entrará em execução'
                              pauseOne:
                                title: Tempo de Espera - Fase 1
                                type: string
                                pattern: '^([1-9]|[1-5][0-9]|60|all)$'
                                default: '1'
                                description: 'Tempo de espera em minutos para o deploy da nova versão da aplicação - Fase 1'
                                ui:help: 'Nota: Permitido de 1 a 60 minutos'
                              setWeightTwo:
                                title: Porcentagem % - Fase 2
                                type: number
                                maxLength: 2
                                default: 40
                                ui:help: 'Porcentagem de pods da nova versão da aplicação que entrará em execução'
                              pauseTwo:
                                title: Tempo de Espera - Fase 2
                                type: string
                                pattern: '^([1-9]|[1-5][0-9]|60|all)$'
                                default: '2'
                                description: 'Tempo de espera em minutos para o deploy da nova versão da aplicação - Fase 2'
                                ui:help: 'Nota: Permitido de 1 a 60 minutos'
                              setWeightThree:
                                title: Porcentagem % - Fase 3
                                type: number
                                maxLength: 2
                                default: 80
                                ui:help: 'Porcentagem de pods da nova versão da aplicação que entrará em execução'
                              pauseThree:
                                title: Tempo de Espera - Fase 3
                                type: string
                                pattern: '^([1-9]|[1-5][0-9]|60|all)$'
                                default: '3'
                                description: 'Tempo de espera em minutos para o deploy da nova versão da aplicação - Fase 3'
                                ui:help: 'Nota: Permitido de 1 a 60 minutos'
                          uniqueItems: true

                    - properties:
                        optionCanary:
                          enum: [Não]

            - properties:
                advanced:
                  enum: [Não]

# --------------------------------------------------------------------------------------------------------

    - title: Dados do Repositorio
      required: [optionRepoUrl,repoUrl]
      properties:
        optionRepoUrl:
          title: Criar um novo repositório?
          type: string
          enum: [Sim,Não]
          description: Criação ou utilização de um repositório existente no github
          ui:widget: radio
      dependencies:
        optionRepoUrl:
          oneOf:
            - properties:
                optionRepoUrl:
                  enum: [Sim,Não]
                repoUrl:
                  title: Localização do repositório github
                  type: string
                  description: Nome do repositório EX (https://github.com/ORGANIZATION/runtime-testes-api.git), o nome seria runtime-testes-api
                  ui:field: RepoUrlPicker
                  ui:options:
                    allowedHosts:
                      - github.com
                    allowedOwners:
                      - stone-payments
                      - pagarme
                  ui:help: 'Selecione a ORG (owner) e digite o nome do repositório da aplicação'

# Template Convert ----------------------------------------------------------------------------------------------------------------------

  steps:
    - id: template-application-readme
      name: Criando o readme da aplicação template
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        url: ./template/application/readme
        targetPath: application-template/
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          context: ${{ parameters.context }}
          team: ${{ parameters.team }}
          slack: ${{ parameters.slack }}
          documentation: ${{ parameters.documentation }}
          typeApp: ${{ parameters.typeApp }}
          languageApp: ${{ parameters.languageApp }}
          versionApp: ${{ parameters.versionApp }}

    - id: template-application-folder
      name: Criando o folder da aplicação template
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        url: ./template/application/src
        targetPath: application-template/src
        values:
          name: ${{ parameters.name }}

    - id: template-github-codeowners
      name: Criando o github codeowners template
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        url: ./template/github
        targetPath: application-template/.github
        values:
          github: ${{ parameters.github }}

    - id: template-application-dockerfile
      name: Criando o dockerfile da aplicação
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        url: ./template/application/docker
        targetPath: application-template/
        values:
          name: ${{ parameters.name }}
          team: ${{ parameters.team }}
          typeApp: ${{ parameters.typeApp }}
          languageApp: ${{ parameters.languageApp }}
          versionApp: ${{ parameters.versionApp }}

    - id: template-application
      name: Criando os values da aplicação template
      action: fetch:template
      each: ${{ parameters.envs.env }}
      input:
        url: ./template/application/chart
        targetPath: application-template/chart
        values:
          env: ${{ each.value }}
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          context: ${{ parameters.context }}
          cost: ${{ parameters.cost }}
          team: ${{ parameters.team }}
          slack: ${{ parameters.slack }}
          documentation: ${{ parameters.documentation }}
          languageApp: ${{ parameters.languageApp }}
          provider: ${{ parameters.provider }}
          resources: ${{ parameters.resources }}
          accessApp: ${{ parameters.accessApp }}
          advanced: ${{ parameters.advanced }}
          optionVariables: ${{ parameters.optionVariables }}
          optionSecrets: ${{ parameters.optionSecrets }}
          optionSidecars: ${{ parameters.optionSidecars }}
          optionNps: ${{ parameters.optionNps }}
          optionHealth: ${{ parameters.optionHealth }}
          optionCanary: ${{ parameters.optionCanary }}
          deployCanary: ${{ parameters.deployCanary }}
          variables_multiline: ${{ parameters.variables_multiline }}
          secrets_multiline: ${{ parameters.secrets_multiline }}
          sidecars_multiline: ${{ parameters.sidecars_multiline }}
          nps_multiline: ${{ parameters.nps_multiline }}
          health_liveness: ${{ parameters.health_liveness }}
          health_readiness: ${{ parameters.health_readiness }}
          repoName: ${{ (parameters.repoUrl | parseRepoUrl).repo}}
          repoOwner: ${{ (parameters.repoUrl | parseRepoUrl).owner}}

    - id: template-ecr
      name: Criando o ECR template
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        targetPath: ecr-template/
        url: ./template/ecr
        values:
          name: ${{ parameters.name }}

    - id: template-vault
      name: Criando Vault template
      action: fetch:template
      if: "${{ parameters.optionSecrets === 'Sim' }}"
      input:
        url: ./template/vault
        targetPath: vault-template/
        values:
          name: ${{ parameters.name }}
          optionSecrets: ${{ parameters.optionSecrets }}
          secrets_multiline: ${{ parameters.secrets_multiline }}
          context: ${{ parameters.context }}

    - id: template-argocd
      name: Criando ArgoCD template
      action: fetch:template
      each: ${{ parameters.envs.env }}
      input:
        url: ./template/argocd
        targetPath: argocd-template/
        values:
          env: ${{ each.value }}
          name: ${{ parameters.name }}
          repoName: ${{ (parameters.repoUrl | parseRepoUrl).repo}}
          repoHost: ${{ (parameters.repoUrl | parseRepoUrl).host}}
          repoOwner: ${{ (parameters.repoUrl | parseRepoUrl).owner}}
          description: ${{ parameters.description }}
          context: ${{ parameters.context }}
          provider: ${{ parameters.provider }}

    - id: template-github-actions
      name: Criando Github Actions template
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        url: ./template/github-actions
        targetPath: application-template/.github/workflows
        values:
          name: ${{ parameters.name }}
          envs: ${{ parameters.envs.env }}
          repoOwner: ${{ (parameters.repoUrl | parseRepoUrl).owner}}
          context: ${{ parameters.context }}
          provider: ${{ parameters.provider }}

    - id: template-docs-application
      name: Criando docs da aplicação template
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        url: ./template/docs
        targetPath: application-template/docs
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}

    - id: catalog-register
      name: Criando catálogo template
      action: fetch:template
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        url: ./template/catalog
        targetPath: application-template/
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          documentation: ${{ parameters.documentation }}
          typeApp: ${{ parameters.typeApp }}
          languageApp: ${{ parameters.languageApp }}
          team: ${{ parameters.team }}
          github: ${{ parameters.github }}
          context: ${{ parameters.context }}
          repoName: ${{ (parameters.repoUrl | parseRepoUrl).repo}}
          repoHost: ${{ (parameters.repoUrl | parseRepoUrl).host}}
          repoOwner: ${{ (parameters.repoUrl | parseRepoUrl).owner}}

# Publish -------------------------------------------------------------------------------------------------------------------------

    - id: publish_application_new_repo
      name: Criando o repositório da aplicação
      action: publish:github
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        allowedHosts: ['github.com']
        repoUrl: ${{ parameters.repoUrl }}
        sourcePath: application-template/
        description: '# New project: ${{parameters.name}}'

    - id: publish_application_new_branch
      name: Criando o PR da aplicacao
      action: publish:github:pull-request
      if: "${{ parameters.optionRepoUrl === 'Não' }}"
      input:
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        allowedHosts: ['github.com']
        repoUrl: ${{ parameters.repoUrl }}
        sourcePath: application-template/
        title: "feat: update ${{ parameters.name }} application"
        branchName: app-${{parameters.name}}
        description: |
          # Update project: ${{parameters.name}}
          ## ${{ parameters.description if parameters.description }}
          ### Linguagem: ${{ parameters.languageApp if parameters.languageApp }}
          ### Versão: ${{ parameters.versionApp if parameters.versionApp }}

    - id: publish_ecr
      name: Criando o PR para o ECR
      action: publish:github:pull-request
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        repoUrl: github.com?owner=stone-payments&repo=platform-ecr
        sourcePath: ecr-template/
        branchName: ecr-${{ parameters.name }}
        title: "feat: create ${{ parameters.name }} ECR repository"
        targetPath: ./applications/ecr/${{ parameters.context }}.d
        description: |
          # New project: ${{parameters.name}}
          ## ${{ parameters.description if parameters.description }}

    - id: publish_vault_new
      name: Criando o PR para as Secrets no Vault
      action: publish:github:pull-request
      if: "${{ parameters.optionRepoUrl === 'Sim' and parameters.optionSecrets === 'Sim' }}"
      input:
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        repoUrl: github.com?owner=stone-payments&repo=platform-k8s-vault
        sourcePath: vault-template/
        branchName: vault-${{ parameters.name }}
        title: "feat: create ${{ parameters.name }} Vault"
        targetPath: ./applications/secrets/secrets.d
        description: |
          # New project: ${{parameters.name}}
          ## ${{ parameters.description if parameters.description }}

    - id: publish_vault_renew
      name: Criando o PR para atualizar as Secrets no Vault
      action: publish:github:pull-request
      if: "${{ parameters.optionRepoUrl === 'Não' and parameters.optionSecrets === 'Sim' }}"
      input:
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        repoUrl: github.com?owner=stone-payments&repo=platform-k8s-vault
        sourcePath: vault-template/
        branchName: vault-${{ parameters.name }}
        title: "feat: update ${{ parameters.name }} Vault"
        targetPath: ./applications/secrets/secrets.d
        description: |
          # Update project: ${{parameters.name}}
          ## ${{ parameters.description if parameters.description }}

    - id: publish_argocd_new
      name: Criando o PR no ArgoCD
      action: publish:github:pull-request
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        repoUrl: github.com?owner=stone-payments&repo=platform-k8s-argo
        sourcePath: argocd-template/
        branchName: argo-${{ parameters.name }}
        title: "feat: create ${{ parameters.name }} ArgoCD"
        targetPath: ./projects/${{ parameters.context }}/${{ parameters.name }}
        description: |
          # New project: ${{parameters.name}}
          ## ${{ parameters.description if parameters.description }}

    - id: publish_argocd_renew
      name: Criando o PR para atualizar no ArgoCD
      action: publish:github:pull-request
      if: "${{ parameters.optionRepoUrl === 'Não' }}"
      input:
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        repoUrl: github.com?owner=stone-payments&repo=platform-k8s-argo
        sourcePath: argocd-template/
        branchName: argo-${{ parameters.name }}
        title: "feat: update ${{ parameters.name }} ArgoCD"
        targetPath: ./projects/${{ parameters.context }}/${{ parameters.name }}
        description: |
          # Update project: ${{parameters.name}}
          ## ${{ parameters.description if parameters.description }}

# Register -------------------------------------------------------------------------------------------------------------------------

    - id: register_new_repo
      name: Registrando catálogo no backstage
      action: catalog:register
      if: "${{ parameters.optionRepoUrl === 'Sim' }}"
      input:
        repoContentsUrl: ${{ steps['publish_application_new_repo'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

# Output -------------------------------------------------------------------------------------------------------------------------

  output:
    links:
      - title: Repositório novo da Aplicação
        url: ${{steps.publish_application_new_repo.output.remoteUrl}}
        text: "Go to Application"

      - title: Repositório existente da Aplicação
        url: ${{steps.publish_application_new_branch.output.remoteUrl}}
        text: "Go to PR Application"

      - title: Repositório ECR
        url: ${{steps.publish_ecr.output.remoteUrl}}
        text: "Go to PR ECR"

      - title: Repositório Vault
        url: ${{steps.publish_vault_new.output.remoteUrl}}
        text: "Go to PR Vault"

      - title: Repositório existente do Vault
        url: ${{steps.publish_vault_renew.output.remoteUrl}}
        text: "Go to PR Vault"

      - title: Repositório ArgoCD
        url: ${{steps.publish_argocd_new.output.remoteUrl}}
        text: "Go to PR ArgoCD"

      - title: Repositório existente do ArgoCD
        url: ${{steps.publish_argocd_renew.output.remoteUrl}}
        text: "Go to PR ArgoCD"
