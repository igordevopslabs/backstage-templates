apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: go-helloworld-template
  title: Go Hello World Template
  description: Creates a Go application that prints "Hello, World!" and publishes it to GitHub
spec:
  owner: go-helloworld
  type: service

  steps:

    - id: fetchTemplate
      name: Fetch Template
      action: fetch:template
      input:
        url: ./template
        targetPath: catalog-info.yaml
        values:
          name: ${{ parameters.name }}

    - id: fetch-base
      name: Fetch base template
      action: fetch:plain
      input:
        url: https://github.com/igordevopslabs/go-app-template.git

    - id: publish-github
      name: Publish to GitHub
      action: publish:github
      input:
        #repoUrl: 'github.com/igordevopslabs/${{ parameters.name }}'
        repoUrl: github.com?owner=igordevopslabs&repo=${{ parameters.name }}
        description: 'Go application that prints "Hello, World!"'
        access: private # or 'private'
        defaultBranch: main

    - id: debug
      name: Log a custom message
      action: debug:log
      input:
        message: "urlvalue: ${{ steps.publish-github.output.repoContentsUrl }}"

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

    - id: publishPr
      name: PR to register catalog-info
      action: publish:github:pull-request 
      input:
        description: |
          - Adicionando '${{ parameters.name }}' ao Backstage como Component.
        sourcePath: catalog-info.yaml
        repoUrl: github.com?repo=${{ parameters.name }}&owner=${{ parameters.organization }}
        branchName: feat-catalog-${{ parameters.name }}
        title: "feat: Register ${{ parameters.name }} to Backstage"

  parameters:
    - title: Data of project
      required:
        - name
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the Go project
          ui:autofocus: true
    - title: Ownership
      required:
        - organization
      properties:
        organization:
          title: organization
          type: string
          description: Github organition, default igordevopslabs
          default: igordevopslabs
          ui:autofocus: true

  output:
    links:
      - title: Prosseguir para o repositório de aplicação
        url: ${{ steps.publish-github.output.remoteUrl }}
        icon: github